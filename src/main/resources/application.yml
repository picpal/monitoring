spring:
  profiles:
    active: local
  #graceful shutdown시 무한루프나 데드락인 경우 종류가 안될 수 있다.
  #그래서 최대 대기시간을 선언하고 최대 대기가 끝나면 종료하도록 할 수 있다.
  lifecycle:
    timeout-per-shutdown-phase: 5s # 사실상 5초내에 로직이 처리 안되는 경우는 통신에 대한 응답 지연. 서비스 성격에 따라 적당한 시간 선정

########################################################
# ************ MyBatis ***********
########################################################
mybatis:
  type-aliases-package: com.picpal.framework.monitoring.repository.mapper
  mapper-locations: classpath:/mappers/**/*.xml

########################################################
# ************ jasypt ***********
########################################################
jasypt:
  encryptor:
    bean: jasyptEncryptorAES

########################################################
# ************ HTTP/HTTPS ***********
########################################################
server:
  port: 8080
  # kill -9 로 실행시 즉시 종료
  # kill -15 명령어가 실행 된다면 Spring의 SpringApplicationShutdownHook 이라는 객체를 통해 Spring을 종료
  # doShutdown 메서드에서 connector들을 닫음으로써 새로운 요청들을 받지 않음.
  shutdown: graceful
  undertow:
    io-threads: 4
    worker-threads: 32
    buffer-size: 1024
    direct-buffers: true
  error:
    whitelabel:
      enabled: false
    servlet:
      encoding:
        force-response: true

# Configure the server to run with SSL/TLS and using HTTPS
#  port: 8443
#  ssl:
#    key-store: classpath:your_own_cert.jks.sample
#    key-store-password: <your-ssl-keystore-password>
#    key-password: <your-ssl-key-password>

########################################################
# ************ Actuator Security Settings ***********
########################################################
management:
  endpoints:
    jmx:
      exposure:
        exclude: "*"
    web:
      exposure:
        include:
          - "info"
          - "health"
    server:

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    url: /docs/open-api-3.0.1.json
    path: /docs/swagger

########################################################
# ************ Redmine Configuration ***********
########################################################
redmine:
  api:
    url: http://localhost:3000
    key: test_api_key_here
  project:
    id: 1
  tracker:
    id: 1
  priority:
    id: 2